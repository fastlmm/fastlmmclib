name: Build

on:
  push:
  schedule:
    - cron: '0 0 1 * *'

jobs:

  Lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install flake8, etc
      run: |
        cd fastlmmclib
        pwd
        pip install flake8 pytest black isort --upgrade

    - name: Lint with flake8, etc
      run: |
        echo "flake8"
        flake8 .
        echo "black"
        black --version
        black --verbose --check .
        echo "isort"
        isort --check-only .

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.0.0
        env:
          CIBW_BUILD: "cp3{7,8,9}-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686 *aarch64 *ppc64le *s390x *universal2 *arm64"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: cd / && pytest {package}/tests/test.py
          #CIBW_BUILD_VERBOSITY: 2

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl



# name: CI
# on:
#   push:
#   schedule:
#     - cron: '0 0 1 * *'
    
# jobs:
#   ci:
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]
#         python-version: [3.7, 3.8, 3.9]
#     runs-on: ${{ matrix.os }}

#     steps:

#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Install GCC 9 on Mac
#       if: runner.os == 'macOS'
#       run: brew install gcc@9

#     - name: Set up Miniconda ${{ matrix.python-version }}
#       uses: conda-incubator/setup-miniconda@v2
#       with:
#           auto-update-conda: true
#           python-version: ${{ matrix.python-version }}

#     - name: Build
#       shell: bash -l {0}
#       run: |
#         conda install --file conda_requirements.txt
#         conda install cython
#         pip install -r requirements.txt
#         export CC=gcc-9
#         export CXX=g++-9
#         python setup.py build_ext --inplace
#         pip freeze
#         python setup.py sdist bdist_wheel

#     - name: Install flake8, etc
#       run: |
#         cd fastlmmclib
#         pwd
#         pip install flake8 pytest black isort --upgrade
#     - name: Lint with flake8, etc
#       run: |
#         echo "flake8"
#         flake8 .
#         echo "black"
#         black --version
#         black --verbose --check .
#         echo "isort"
#         isort --check-only .


#     - name: Test
#       shell: bash -l {0}
#       run: |
#         export PYTHONPATH=${GITHUB_WORKSPACE}
#         cd tests
#         pytest test.py

#     - name: Save Windows and Mac Wheels
#       if: matrix.os != 'ubuntu-latest'
#       uses: actions/upload-artifact@v2
#       with:
#         name: wheels
#         path: dist/*.whl

#     - name: Save SDist
#       if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'
#       uses: actions/upload-artifact@v2
#       with:
#         name: wheels
#         path: dist/*.tar.gz
