name: Build
# This workflow is based on that of cbgen

on:
  push:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

env:
  CIBW_PROJECT_REQUIRES_PYTHON: ">=3.10,<3.14"
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: cd / && pytest {package}/tests/test.py
  CIBW_BUILD_VERBOSITY: 2

jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install flake8, etc
      run: |
        cd fastlmmclib
        pwd
        pip install flake8 pytest black isort --upgrade

    - name: Lint with flake8, etc
      run: |
        echo "flake8"
        flake8 .
        echo "black"
        black --version
        black --verbose --check .
        echo "isort"
        isort --check-only .


  make_wheels:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          include:
            - {os: macos-13, arch: x86_64, build: "*"}
            - {os: macos-14, arch: arm64, build: "*"}
            - {os: windows-2022, arch: AMD64, build: "*"}
            - {os: ubuntu-latest, arch: x86_64, build: "*"}
            - {os: ubuntu-latest, arch: aarch64, build: "*manylinux*"}
            - {os: ubuntu-latest, arch: aarch64, build: "*musllinux*"}
      steps:
        - uses: actions/checkout@v3
        - uses: docker/setup-qemu-action@v3
          with:
            platforms: arm64
          if: matrix.os == 'ubuntu-latest'
        # use MSVC instead of experimental support for NumPy built with MinGW-w64 
        - uses: TheMrMilchmann/setup-msvc-dev@v3
          if: matrix.os == 'windows-2022'
          with:
              arch: x64
        - name: Build wheels
          run: pipx run cibuildwheel==2.21.3
          env:
            CIBW_ARCHS: ${{ matrix.arch }}
            CIBW_BUILD: ${{ matrix.build }}
        - uses: actions/upload-artifact@v3
          with:
            path: wheelhouse/*.whl
